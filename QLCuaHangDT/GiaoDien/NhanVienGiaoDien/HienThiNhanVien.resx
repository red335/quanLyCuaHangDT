<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAAHdElNRQfjCQsPBQDwPpWEAAADyElEQVR4Xu3aMW4sSxIE
        wX//I77LcEGkVvAlyO7JkkwwxTEdUpY2/319fQH/R0ZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQE
        RkZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQE
        RkZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQERkZgZARGRmBkBEZGYGQERkbu+vfv31c5f8d9Gbmj
        HkU5v+OejOyrh/CT83vuyMiuegC/ce6wLyN76vD/4txjV0Z21ME/ce6yJyM76tifOHfZk5EddexPnLvs
        ycjn1aG/ce6zIyOfV0f+xrnPjox8Xh35G+c+OzLyeXXkb5z77MjI59WRv3HusyMjO+rQnzh32ZORHXXs
        T5y77MnIjjr2J85d9mRkTx38X5x77MrIrjr83zh32JeRffUAfnJ+zx0ZuaMeQjm/456M3FWP4tv5O+7L
        CIyMwMgIjIzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyM3Ff/5v12/o67MnJPPYpyfscdGbmjHsJPzu/Z
        l5F99QB+49xhV0Z21eH/xbnHnozsqYN/4txlR0b21LE/ce6yIyN76tifOHfZkZEddehvnPt8XkZ21JG/
        ce7zeRnZUUf+xrnP52VkRx35G+c+n5eRHXXkb5z7fF5G9tShP3HusiMje+rYnzh32ZGRPXXsT5y77MjI
        rjr4vzj32JORfXX4v3HusCsjd9QD+Mn5Pfsyck89hHJ+xx0Zua8exbfzd9yVERgZgZERGBmBkREYGYGR
        ERgZgZERGBmBkREYGYGRkfvqj4rfzt9xV0buqUdRzu+4IyN31EP4yfk9+zKyrx7Ab5w77MrIrjr8vzj3
        2JORPXXwT5y77MjInjr2J85ddmRkTx37E+cuOzKyow79jXOfz8vIjjryN859Pi8jO+rI3zj3+byM7Kgj
        f+Pc5/MysqOO/I1zn8/LyJ469CfOXXZkZE8d+xPnLjsysqeO/Ylzlx0Z2VUH/xfnHnsysq8O/zfOHXZl
        5I56AD85v2dfRu6ph1DO77gjI/fVo/h2/o67MgIjIzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIj
        IzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIj
        IzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIjIzAyAiMjMDICIyMwMgIjIzAyAt++/vsfhNUpfNI9
        on8AAAAASUVORK5CYII=
</value>
  </data>
</root>